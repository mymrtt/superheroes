{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/personal/code/desafio/desafio-correto/src/screens/Onboarding.js\";\n// Libs\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router-dom'; // Images\n\nimport background from '../assets/wonder_woman.jpg'; // Components\n\nimport Input from '../components/Input';\nimport Button from '../components/Button'; // Services\n\nimport { createUser, login } from '../services/apiBack4App'; // Styles\n\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n`;\nconst ContainerBg = styled.aside`\n  width: 50%;\n  background-image: url(${background});\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  @media(max-width: 648px) {\n    display: none;\n  }\n`;\nconst Content = styled.div`\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  @media(max-width: 648px) {\n    padding: 0 3rem;\n    width: 100%;\n  }\n`;\nconst Form = styled.form`\n  width: 75%;\n  display: flex;\n  flex-direction: column;\n  align-self: flex-end;\n\n  @media(max-width: 768px) {\n    width: 80%;\n  }\n\n  @media(max-width: 648px) {\n    width: 100%;\n  }\n`;\nconst Title = styled.h1`\n  margin-bottom: 3rem;\n  font-size: 2.5rem;\n`;\nconst AnotherOptionText = styled.p`\n  margin-top: 2rem;\n  width: fit-content;\n\n  span {\n    color: #842219;\n    font-weight: 500;\n    border-bottom: 1px solid #842219;\n    cursor: pointer;\n  }\n`;\nconst ErrorMessage = styled.p`\n  margin: .5rem 0;\n  color: tomato;\n  font-size: .8rem;\n  font-weight: 800;\n\n  @media(max-width: 648px) {\n    margin-bottom: .9rem;\n  }\n`;\n\nclass Onboarding extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCreateAccount: true,\n      user: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      usernameError: false,\n      emailError: false,\n      passwordError: false,\n      redirect: undefined,\n      showPassword: false,\n      error: undefined,\n      isFetching: undefined\n    };\n\n    this.createUserAccount = async user => {\n      try {\n        this.setState({\n          isFetching: true\n        });\n        const response = await createUser(user);\n\n        if (response) {\n          this.setState({\n            isFetching: false,\n            isCreateAccount: false\n          });\n        }\n\n        console.log('response create user api', response);\n      } catch (error) {\n        console.log('error', error);\n        console.log('error response', error.response);\n        const ErrorMessage = error.response.data.code;\n\n        if (ErrorMessage === 202) {\n          this.setState({\n            error: 'Account already exists for this username.',\n            isFetching: false\n          });\n        } else if (ErrorMessage === 203) {\n          this.setState({\n            error: 'Account already exists for this email address.',\n            isFetching: false\n          });\n        } else {\n          this.setState({\n            error: 'Unknown error.',\n            isFetching: false\n          });\n        }\n      }\n    };\n\n    this.UserLogin = async user => {\n      try {\n        this.setState({\n          isFetching: true\n        });\n        const response = await login(user.email, user.password);\n\n        if (response) {\n          this.setState({\n            isFetching: false\n          });\n          const deconstructing = response.data;\n          localStorage.setItem('sessionToken', deconstructing.sessionToken);\n          localStorage.setItem('username', deconstructing.username);\n          this.setState({\n            redirect: '/dashboard'\n          });\n        }\n      } catch (error) {\n        this.setState({\n          isFetching: false\n        });\n        console.log('error', error);\n        console.log('error response', error.response);\n        const ErrorMessage = error.response.data.code;\n\n        if (ErrorMessage === 101) {\n          this.setState({\n            error: 'Invalid username/password.'\n          });\n        } else {\n          this.setState({\n            error: 'Unknown error.'\n          });\n        }\n      }\n    };\n\n    this.handleScreen = () => {\n      this.setState({\n        isCreateAccount: !this.state.isCreateAccount\n      });\n      this.setState({\n        usernameError: false,\n        emailError: false,\n        passwordError: false,\n        user: {\n          username: '',\n          email: '',\n          password: ''\n        }\n      });\n    };\n\n    this.handleSubmit = event => {\n      const {\n        user,\n        isCreateAccount,\n        usernameError,\n        emailError,\n        passwordError\n      } = this.state;\n      event.preventDefault();\n\n      if (!usernameError && !emailError && !passwordError) {\n        if (!isCreateAccount) {\n          delete user.username;\n          this.UserLogin(user);\n        } else {\n          this.createUserAccount(user);\n        }\n      }\n    };\n\n    this.handleChange = (field, ev) => {\n      const {\n        user\n      } = this.state;\n      user[field] = ev.target.value;\n\n      if (field === 'username') {\n        this.setState({\n          usernameError: ev.target.value.length < 4\n        });\n      }\n\n      if (field === 'email') {\n        this.setState({\n          emailError: ev.target.value.length < 6\n        });\n      }\n\n      if (field === 'password') {\n        this.setState({\n          passwordError: ev.target.value.length < 6\n        });\n      }\n\n      this.setState({\n        user\n      });\n    };\n\n    this.handleShowPassword = () => {\n      this.setState({\n        showPassword: !this.state.showPassword\n      });\n    };\n  }\n\n  render() {\n    const {\n      isCreateAccount,\n      user,\n      usernameError,\n      emailError,\n      passwordError,\n      redirect,\n      error,\n      isFetching\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, isCreateAccount ? 'Sign up' : 'Sign in'), isCreateAccount && /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      label: \"Username\",\n      inputWidthTablet: \"70%\",\n      placeholder: \"Enter your username\",\n      value: user.username,\n      onChange: ev => this.handleChange('username', ev),\n      error: usernameError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }), usernameError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, \"Enter a valid username.\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      label: \"Email\",\n      inputWidthTablet: \"70%\",\n      placeholder: \"you@exemple.com\",\n      value: user.email,\n      onChange: ev => this.handleChange('email', ev),\n      error: emailError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }), emailError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 30\n      }\n    }, \"Enter a valid email.\"), /*#__PURE__*/React.createElement(Input, {\n      type: this.state.showPassword ? 'text' : 'password',\n      label: \"Password\",\n      placeholder: \"Enter your password\",\n      value: user.password,\n      onChange: ev => this.handleChange('password', ev),\n      pass: true,\n      inputWidth: \"92%\",\n      inputWidthTablet: \"70%\",\n      borderBottom: \"transparent\",\n      showPass: this.state.showPassword,\n      handleShowPassword: this.handleShowPassword,\n      error: passwordError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }), passwordError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, \"Enter a valid password.\"), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }, error), /*#__PURE__*/React.createElement(Button, {\n      text: isCreateAccount ? 'Sign up' : 'Sign in',\n      isFetching: isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(AnotherOptionText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, isCreateAccount ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, \"Do you already have an account? \", /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 51\n      }\n    }, \"Sign in\")) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, \"Don't have an account yet? \", /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 46\n      }\n    }, \"Sign up\"))))), /*#__PURE__*/React.createElement(ContainerBg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }), redirect && /*#__PURE__*/React.createElement(Redirect, {\n      exact: true,\n      to: redirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 22\n      }\n    }));\n  }\n\n}\n\nexport default Onboarding;","map":{"version":3,"sources":["/home/yasmin/Documentos/personal/code/desafio/desafio-correto/src/screens/Onboarding.js"],"names":["React","Component","Fragment","styled","Redirect","background","Input","Button","createUser","login","Container","div","ContainerBg","aside","Content","Form","form","Title","h1","AnotherOptionText","p","ErrorMessage","Onboarding","state","isCreateAccount","user","username","email","password","usernameError","emailError","passwordError","redirect","undefined","showPassword","error","isFetching","createUserAccount","setState","response","console","log","data","code","UserLogin","deconstructing","localStorage","setItem","sessionToken","handleScreen","handleSubmit","event","preventDefault","handleChange","field","ev","target","value","length","handleShowPassword","render"],"mappings":"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","sourcesContent":["// Libs\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router-dom';\n\n// Images\nimport background from '../assets/wonder_woman.jpg';\n\n// Components\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\n// Services\nimport { createUser, login } from '../services/apiBack4App';\n\n// Styles\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst ContainerBg = styled.aside`\n  width: 50%;\n  background-image: url(${background});\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  @media(max-width: 648px) {\n    display: none;\n  }\n`;\n\nconst Content = styled.div`\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  @media(max-width: 648px) {\n    padding: 0 3rem;\n    width: 100%;\n  }\n`;\n\nconst Form = styled.form`\n  width: 75%;\n  display: flex;\n  flex-direction: column;\n  align-self: flex-end;\n\n  @media(max-width: 768px) {\n    width: 80%;\n  }\n\n  @media(max-width: 648px) {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 3rem;\n  font-size: 2.5rem;\n`;\n\nconst AnotherOptionText = styled.p`\n  margin-top: 2rem;\n  width: fit-content;\n\n  span {\n    color: #842219;\n    font-weight: 500;\n    border-bottom: 1px solid #842219;\n    cursor: pointer;\n  }\n`;\n\nconst ErrorMessage = styled.p`\n  margin: .5rem 0;\n  color: tomato;\n  font-size: .8rem;\n  font-weight: 800;\n\n  @media(max-width: 648px) {\n    margin-bottom: .9rem;\n  }\n`;\n\nclass Onboarding extends Component {\n  state = {\n    isCreateAccount: true,\n    user: {\n      username: '',\n      email: '',\n      password: '',\n    },\n    usernameError: false,\n    emailError: false,\n    passwordError: false,\n    redirect: undefined,\n    showPassword: false,\n    error: undefined,\n    isFetching: undefined,\n  };\n\n\n  createUserAccount = async (user) => {\n    try {\n      this.setState({\n        isFetching: true,\n      });\n\n      const response = await createUser(user);\n\n      if (response) {\n        this.setState({\n          isFetching: false,\n          isCreateAccount: false,\n        });\n      }\n\n      console.log('response create user api', response)\n      \n    } catch (error) {\n      console.log('error', error);\n      console.log('error response', error.response);\n\n      const ErrorMessage = error.response.data.code;\n      \n      if (ErrorMessage === 202) {\n\t\t\t\tthis.setState({\n          error: 'Account already exists for this username.',\n          isFetching: false,\n\t\t\t\t});\n\t\t\t} else if (ErrorMessage === 203) {\n\t\t\t\tthis.setState({\n          error: 'Account already exists for this email address.',\n          isFetching: false,\n\t\t\t\t});\n\t\t\t} else {\n        this.setState({\n          error: 'Unknown error.',\n          isFetching: false,\n\t\t\t\t});\n      }\n    }\n  }\n\n  UserLogin = async (user) => {\n    try {\n      this.setState({\n        isFetching: true,\n      });\n\n      const response = await login(user.email, user.password);\n\n      if (response) {\n        this.setState({\n          isFetching: false,\n        });\n\n        const deconstructing = response.data;\n\n        localStorage.setItem('sessionToken', deconstructing.sessionToken);\n        localStorage.setItem('username',  deconstructing.username);\n        \n        this.setState({\n          redirect: '/dashboard',\n        });\n      }\n    } catch (error) {\n      this.setState({\n        isFetching: false,\n      });\n\n      console.log('error', error);\n      console.log('error response', error.response);\n\n      const ErrorMessage = error.response.data.code;\n\n      if (ErrorMessage === 101) {\n        this.setState({\n          error: 'Invalid username/password.',\n        });\n      } else {\n        this.setState({\n\t\t\t\t\terror: 'Unknown error.',\n\t\t\t\t});\n      }\n    }\n  }\n\n  handleScreen = () => {\n    this.setState({\n      isCreateAccount: !this.state.isCreateAccount,\n    });\n\n    this.setState({\n\t\t\tusernameError: false,\n      emailError: false,\n      passwordError: false,\n\t\t\tuser: {\n\t\t\t\tusername: '',\n\t\t\t\temail: '',\n\t\t\t\tpassword: '',\n\t\t\t},\n\t\t});\n  }\n\n  handleSubmit = (event) => {\n    const { user, isCreateAccount, usernameError, emailError, passwordError } = this.state;\n    \n    event.preventDefault();\n\n    if (!usernameError && !emailError && !passwordError) {\n      if (!isCreateAccount) {\n        delete user.username;\n        \n        this.UserLogin(user);\n      } else {\n        this.createUserAccount(user);\n      }\n    }\n  }\n\n  handleChange = (field, ev) => {\n    const { user } = this.state;\n\n    user[field] = ev.target.value;\n\n    if (field === 'username') {\n      this.setState({\n        usernameError: ev.target.value.length < 4,\n      });\n    }\n\n    if (field === 'email') {\n      this.setState({\n        emailError: ev.target.value.length < 6,\n      });\n    }\n\n    if (field === 'password') {\n      this.setState({\n        passwordError: ev.target.value.length < 6,\n      });\n    }\n\n    this.setState({\n      user,\n    })\n  }\n\n  handleShowPassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  render() {\n    const { isCreateAccount, user, usernameError, emailError, passwordError, redirect, error, isFetching } = this.state;\n\n    return (\n      <Container>\n        <Content>\n          <Form onSubmit={this.handleSubmit}>\n            <Title>{isCreateAccount ? 'Sign up' : 'Sign in'}</Title>\n              {isCreateAccount && (\n                <Input\n                  type=\"text\"\n                  label=\"Username\"\n                  inputWidthTablet=\"70%\"\n                  placeholder=\"Enter your username\"\n                  value={user.username}\n                  onChange={(ev) => this.handleChange('username', ev)}\n                  error={usernameError}\n                />\n              )}\n              {usernameError && <ErrorMessage>Enter a valid username.</ErrorMessage>}\n              <Input\n                type=\"email\" \n                label=\"Email\"\n                inputWidthTablet=\"70%\"\n                placeholder=\"you@exemple.com\"\n                value={user.email}\n                onChange={(ev) => this.handleChange('email', ev)}\n                error={emailError}\n              />\n              {emailError && <ErrorMessage>Enter a valid email.</ErrorMessage>}\n                <Input\n                  type={this.state.showPassword ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"Enter your password\"\n                  value={user.password}\n                  onChange={(ev) => this.handleChange('password', ev)}\n                  pass={true}\n                  inputWidth=\"92%\"\n                  inputWidthTablet=\"70%\"\n                  borderBottom=\"transparent\"\n                  showPass={this.state.showPassword}\n                  handleShowPassword={this.handleShowPassword}\n                  error={passwordError}\n                />\n              {passwordError && <ErrorMessage>Enter a valid password.</ErrorMessage>}\n              {error && <ErrorMessage>{error}</ErrorMessage>}\n              <Button \n                text={isCreateAccount ? 'Sign up' : 'Sign in'}\n                isFetching={isFetching}\n              />\n            <AnotherOptionText>\n              {isCreateAccount ? (\n                <Fragment>\n                  Do you already have an account? <span onClick={this.handleScreen}>Sign in</span>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  Don't have an account yet? <span onClick={this.handleScreen}>Sign up</span>\n                </Fragment>\n              )}\n            </AnotherOptionText>\n          </Form>\n        </Content>\n        <ContainerBg />\n        {redirect && <Redirect exact to={redirect} />}\n      </Container>\n    )\n  }\n}\n\nexport default Onboarding;\n"]},"metadata":{},"sourceType":"module"}