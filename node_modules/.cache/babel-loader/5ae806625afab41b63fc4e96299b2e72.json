{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/personal/code/simple/src/screens/Dashboard.js\";\n// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { nanoid } from \"nanoid\"; // Components\n\nimport Header from '../components/Header';\nimport Input from '../components/Input';\nimport Button from '../components/Button'; // Images\n\nimport editIcon from \"../assets/edit.svg\";\nimport deleteIcon from \"../assets/x-circle.svg\"; // Styles\n\nconst Container = styled.div`\n  height: 100vh;\n  font-family: 'Overpass', Regular;\n  background: #f2f4f7;\n`;\nconst ContainerTodo = styled.div`\n  margin: 2rem;\n  padding-bottom: 1rem;\n  width: 25%;\n  max-width: 35%;\n  height: fit-content;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n`;\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  text-align: center;\n`;\nconst ContentTodo = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst ContainerList = styled.ul`\n  margin: 2rem;\n  padding: 0;\n  width: 60%;\n  max-width: 60%;\n  height: 80vh;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n  display: ${props => props.emptyMessage && 'flex'};\n  justify-content: ${props => props.emptyMessage && 'center'};\n  align-items: ${props => props.emptyMessage && 'center'};\n`;\nconst ListItem = styled.li`\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  border-bottom: 1px solid #c7cad0;\n\n  &:hover {\n\t\tbackground: #c7cad088;\n\t}\n`;\nconst ListItemText = styled.p`\n  width: 90%;\n  font-size: 1rem;\n  word-break: break-all;\n  font-weight: ${props => props.title && '800'};\n`;\nconst ListItemOptions = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst ItemOptionsIcon = styled.img`\n  margin-right: ${props => props.first && '.5rem'};\n  cursor: pointer;\n`;\nconst EmptyListMessage = styled.p`\n  font-size: 1.5rem;\n  text-align: center;\n`;\nconst ErrorMessage = styled.p`\n  margin: 0;\n  font-size: .8rem;\n  color: tomato;\n  font-weight: bold;\n`;\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: {\n        title: '',\n        task: ''\n      },\n      nameError: undefined,\n      taskError: undefined,\n      emptyError: undefined,\n      list: []\n    };\n\n    this.handleSubmit = () => {\n      const {\n        error,\n        emptyError\n      } = this.state;\n      const {\n        title,\n        task,\n        nameError,\n        taskError\n      } = this.state.values;\n\n      if (title === '' && task === '') {\n        this.setState({\n          emptyError: 'Preencha todos os campos.'\n        });\n      } else {\n        if (title.length === 0) {\n          this.setState({\n            emptyError: undefined,\n            nameError: 'Insira um título.'\n          });\n        } else {\n          this.setState({\n            nameError: undefined\n          });\n        }\n\n        if (task.length === 0) {\n          this.setState({\n            emptyError: undefined,\n            taskError: 'Insira uma tarefa.'\n          });\n        } else {\n          this.setState({\n            taskError: undefined\n          });\n        }\n\n        if (!error && !emptyError && !nameError && !taskError) {\n          console.log('values', this.state.values);\n          const item = {\n            id: nanoid(5),\n            title,\n            task\n          };\n          this.setState({\n            list: this.state.list.concat(item)\n          });\n        }\n      }\n    };\n\n    this.handleChange = (ev, field) => {\n      const {\n        values\n      } = this.state;\n      values[field] = ev.target.value;\n      console.log('values', this.state.values);\n      this.setState({\n        values\n      });\n    };\n\n    this.renderList = () => {\n      return /*#__PURE__*/React.createElement(ContainerList, {\n        emptyMessage: this.state.list.length === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, this.state.list.length > 0 ? this.state.list.map(item => /*#__PURE__*/React.createElement(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        title: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, item.title), /*#__PURE__*/React.createElement(ListItemText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, item.task), /*#__PURE__*/React.createElement(ListItemOptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ItemOptionsIcon, {\n        first: true,\n        src: editIcon,\n        alt: \"editar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ItemOptionsIcon, {\n        src: deleteIcon,\n        alt: \"excluir\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      })))) : /*#__PURE__*/React.createElement(EmptyListMessage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"Adicione uma tarefa.\"));\n    };\n  }\n\n  render() {\n    const {\n      titleValue,\n      taskValue,\n      nameError,\n      taskError,\n      emptyError\n    } = this.state;\n    console.log('listaa', this.state.list);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ContainerTodo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"Adicione um Modelo\"), /*#__PURE__*/React.createElement(ContentTodo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      text: titleValue,\n      type: \"text\" // label=\"Título\"\n      ,\n      label: \"Nome\",\n      containerWidth: \"75%\",\n      inputWidth: \"100%\",\n      borderBottom: emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\",\n      onChange: ev => this.handleChange(ev, 'title'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }), nameError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, nameError), /*#__PURE__*/React.createElement(Input, {\n      text: taskValue,\n      type: \"text\",\n      label: \"Marca\" // label=\"Tarefa\"\n      ,\n      containerWidth: \"75%\",\n      inputWidth: \"100%\",\n      borderBottom: emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\",\n      onChange: ev => this.handleChange(ev, 'task'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }), taskError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, taskError), emptyError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 30\n      }\n    }, emptyError), /*#__PURE__*/React.createElement(Button, {\n      text: \"Adicionar\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }))), this.renderList()));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/yasmin/Documentos/personal/code/simple/src/screens/Dashboard.js"],"names":["React","Component","styled","nanoid","Header","Input","Button","Container","div","ContainerTodo","Title","h2","ContentTodo","ContainerList","ul","props","emptyMessage","ListItem","li","ListItemText","p","title","ListItemOptions","ItemOptionsIcon","img","first","EmptyListMessage","ErrorMessage","Dashboard","state","values","task","nameError","undefined","taskError","emptyError","list","handleSubmit","error","setState","length","console","log","item","id","concat","handleChange","ev","field","target","value","renderList","map","editIcon","deleteIcon","render","titleValue","taskValue","display","justifyContent"],"mappings":"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","sourcesContent":["// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { nanoid } from \"nanoid\";\n\n// Components\nimport Header from '../components/Header';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\n// Images\nimport editIcon from '../assets/edit.svg';\nimport deleteIcon from '../assets/x-circle.svg';\n\n// Styles\nconst Container = styled.div`\n  height: 100vh;\n  font-family: 'Overpass', Regular;\n  background: #f2f4f7;\n`;\n\nconst ContainerTodo = styled.div`\n  margin: 2rem;\n  padding-bottom: 1rem;\n  width: 25%;\n  max-width: 35%;\n  height: fit-content;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  text-align: center;\n`;\n\nconst ContentTodo = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ContainerList = styled.ul`\n  margin: 2rem;\n  padding: 0;\n  width: 60%;\n  max-width: 60%;\n  height: 80vh;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n  display: ${(props) => props.emptyMessage && 'flex'};\n  justify-content: ${(props) => props.emptyMessage && 'center'};\n  align-items: ${(props) => props.emptyMessage && 'center'};\n`;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  border-bottom: 1px solid #c7cad0;\n\n  &:hover {\n\t\tbackground: #c7cad088;\n\t}\n`;\n\nconst ListItemText = styled.p`\n  width: 90%;\n  font-size: 1rem;\n  word-break: break-all;\n  font-weight: ${(props) => props.title && '800'};\n`;\n\nconst ListItemOptions = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ItemOptionsIcon = styled.img`\n  margin-right: ${(props) => props.first && '.5rem'};\n  cursor: pointer;\n`;\n\nconst EmptyListMessage = styled.p`\n  font-size: 1.5rem;\n  text-align: center;\n`;\n\nconst ErrorMessage = styled.p`\n  margin: 0;\n  font-size: .8rem;\n  color: tomato;\n  font-weight: bold;\n`;\n\nclass Dashboard extends Component {\n  state = {\n    values: {\n      title: '',\n      task: ''\n    },\n    nameError: undefined,\n    taskError: undefined,\n    emptyError: undefined,\n    list: [],\n  }\n\n  handleSubmit = () => {\n    const { error, emptyError } = this.state;\n    const { title, task, nameError, taskError } = this.state.values;\n\n    if (title === '' && task === '') {\n      this.setState({\n        emptyError: 'Preencha todos os campos.',\n      });\n    } else {\n      if (title.length === 0) {\n        this.setState({\n          emptyError: undefined,\n          nameError: 'Insira um título.',\n        });\n      } else {\n        this.setState({\n          nameError: undefined,\n        })\n      }\n  \n      if (task.length === 0) {\n        this.setState({\n          emptyError: undefined,\n          taskError: 'Insira uma tarefa.',\n        });\n      } else {\n        this.setState({\n          taskError: undefined,\n        })\n      }\n\n      if (!error && !emptyError && !nameError && !taskError) {\n          console.log('values', this.state.values)\n\n        const item = {id: nanoid(5), title, task}\n\n        this.setState({\n          list: this.state.list.concat(item),\n        });\n      }\n    }\n  }\n\n  handleChange = (ev, field) => {\n    const { values } = this.state;\n\n    values[field] = ev.target.value;\n\n    console.log('values', this.state.values)\n\n    this.setState({\n      values,\n    });\n  }\n\n  renderList = () => {\n    return (\n      <ContainerList emptyMessage={this.state.list.length === 0}>\n        {this.state.list.length > 0 ? (\n          this.state.list.map(item => (\n            <ListItem>\n              <ListItemText title>{item.title}</ListItemText>\n              <ListItemText>{item.task}</ListItemText>\n              <ListItemOptions>\n                <ItemOptionsIcon first src={editIcon} alt=\"editar\" />\n                <ItemOptionsIcon src={deleteIcon} alt=\"excluir\" />\n              </ListItemOptions>\n            </ListItem>\n          ))\n        ) : <EmptyListMessage>Adicione uma tarefa.</EmptyListMessage>\n        }\n      </ContainerList>\n    );\n  }\n\n  render() {\n    const { titleValue, taskValue, nameError, taskError, emptyError } = this.state;\n\n    console.log('listaa', this.state.list)\n\n    return (\n      <Container>\n        <Header />\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <ContainerTodo>\n            <Title>Adicione um Modelo</Title>\n            <ContentTodo>\n              <Input\n                text={titleValue}\n                type=\"text\"\n                // label=\"Título\"\n                label=\"Nome\"\n                containerWidth=\"75%\"\n                inputWidth=\"100%\"\n                borderBottom={emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\"}\n                onChange={(ev) => this.handleChange(ev, 'title')}\n              />\n              {nameError && <ErrorMessage>{nameError}</ErrorMessage>}\n              <Input\n                text={taskValue}\n                type=\"text\"\n                label=\"Marca\"\n                // label=\"Tarefa\"\n                containerWidth=\"75%\"\n                inputWidth=\"100%\" \n                borderBottom={emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\"}\n                onChange={(ev) => this.handleChange(ev, 'task')}\n              />\n              {taskError && <ErrorMessage>{taskError}</ErrorMessage>}\n              {emptyError && <ErrorMessage>{emptyError}</ErrorMessage>}\n              <Button \n                text=\"Adicionar\"\n                onClick={this.handleSubmit}\n              />\n            </ContentTodo>\n          </ContainerTodo>\n            {this.renderList()}\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}