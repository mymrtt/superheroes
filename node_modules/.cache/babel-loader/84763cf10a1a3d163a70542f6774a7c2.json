{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/personal/code/simple/src/screens/Gallery.js\";\n// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components'; // Components\n\nimport Header from '../components/Header'; // Services\n\nimport { getAllPics } from '../services/api'; // Styles\n\nconst Container = styled.div`\n  width: 100%;\n  background: #f2f4f7;\n  font-family: 'Overpass', Regular;\n`;\nconst Content = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\nconst ContainerImage = styled.div`\n  padding: 1rem;\n  display: flex;\n  justify-content: center;\n  align-self: center;\n`;\nconst Button = styled.button`\n  display: ${props => props.display ? 'block' : 'none'};\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  padding: 1rem;\n`;\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      picsList: [],\n      isButtonShowing: false\n    };\n\n    this.scrollFunction = () => {\n      if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n        this.setState({\n          isButtonShowing: true\n        });\n      } else {\n        this.setState({\n          isButtonShowing: false\n        });\n      }\n    };\n\n    this.fetchingData = async () => {\n      try {\n        const response = await getAllPics();\n        this.setState({\n          picsList: response.data\n        });\n        console.log('response', response);\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n\n    this.teste = lastOne => {\n      // const lastOne = this.state.picsList.length - 1;\n      // if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n      // } else {\n      //   mybutton.style.display = \"none\";\n      // }\n      console.log('lastOne', lastOne);\n    };\n  }\n\n  componentDidMount() {\n    this.fetchingData();\n    window.onscroll = this.scrollFunction();\n  }\n\n  render() {\n    console.log('isButtonShowing', this.state.isButtonShowing);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, this.state.picsList.map((item, index) => /*#__PURE__*/React.createElement(ContainerImage, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.urls.small,\n      alt: item.alt_description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      display: this.state.isButtonShowing,\n      onClick: this.teste,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"clica aqui\")));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/yasmin/Documentos/personal/code/simple/src/screens/Gallery.js"],"names":["React","Component","styled","Header","getAllPics","Container","div","Content","ContainerImage","Button","button","props","display","Search","state","picsList","isButtonShowing","scrollFunction","document","body","scrollTop","documentElement","setState","fetchingData","response","data","console","log","error","teste","lastOne","componentDidMount","window","onscroll","render","map","item","index","urls","small","alt_description"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,iBAA3B,C,CAEA;;AACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;;;CAA7B;AAMA,MAAMC,OAAO,GAAGL,MAAM,CAACI,GAAI;;;;CAA3B;AAMA,MAAME,cAAc,GAAGN,MAAM,CAACI,GAAI;;;;;CAAlC;AAOA,MAAMG,MAAM,GAAGP,MAAM,CAACQ,MAAO;aACfC,KAAD,IAAWA,KAAK,CAACC,OAAN,GAAgB,OAAhB,GAA0B,MAAO;;;;;;;CADzD;;AAUA,MAAMC,MAAN,SAAqBZ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7Ba,KAD6B,GACrB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,eAAe,EAAE;AAFX,KADqB;;AAAA,SAa7BC,cAb6B,GAaZ,MAAO;AACtB,UAAIC,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0B,EAA1B,IAAgCF,QAAQ,CAACG,eAAT,CAAyBD,SAAzB,GAAqC,EAAzE,EAA6E;AAC3E,aAAKE,QAAL,CAAc;AACZN,UAAAA,eAAe,EAAE;AADL,SAAd;AAGD,OAJD,MAIO;AACL,aAAKM,QAAL,CAAc;AACZN,UAAAA,eAAe,EAAE;AADL,SAAd;AAGD;AACF,KAvB4B;;AAAA,SAyB7BO,YAzB6B,GAyBd,YAAY;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMpB,UAAU,EAAjC;AAEA,aAAKkB,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAES,QAAQ,CAACC;AADP,SAAd;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACD,OARD,CAQE,OAAMI,KAAN,EAAa;AACbF,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACD;AACF,KArC4B;;AAAA,SAuC7BC,KAvC6B,GAuCpBC,OAAD,IAAa;AACnB;AAEA;AAEA;AACA;AACA;AAEAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,OAAvB;AACD,KAjD4B;AAAA;;AAM7BC,EAAAA,iBAAiB,GAAG;AAElB,SAAKR,YAAL;AAEAS,IAAAA,MAAM,CAACC,QAAP,GAAkB,KAAKhB,cAAL,EAAlB;AACD;;AAwCDiB,EAAAA,MAAM,GAAG;AACPR,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKb,KAAL,CAAWE,eAA1C;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,QAAX,CAAoBoB,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBACvB,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUC,KAApB;AAA2B,MAAA,GAAG,EAAEH,IAAI,CAACI,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,eAME,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWE,eADtB;AAEE,MAAA,OAAO,EAAE,KAAKa,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CAFF,CADF;AAkBD;;AAvE4B;;AA0E/B,eAAehB,MAAf","sourcesContent":["// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\n// Components\nimport Header from '../components/Header';\n\n// Services\nimport { getAllPics } from '../services/api';\n\n// Styles\nconst Container = styled.div`\n  width: 100%;\n  background: #f2f4f7;\n  font-family: 'Overpass', Regular;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst ContainerImage = styled.div`\n  padding: 1rem;\n  display: flex;\n  justify-content: center;\n  align-self: center;\n`;\n\nconst Button = styled.button`\n  display: ${(props) => props.display ? 'block' : 'none'};\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  padding: 1rem;\n`;\n\nclass Search extends Component {\n  state = {\n    picsList: [],\n    isButtonShowing: false,\n  }\n\n  componentDidMount() {\n\n    this.fetchingData();\n\n    window.onscroll = this.scrollFunction();\n  }\n\n  scrollFunction = () =>  {\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n      this.setState({\n        isButtonShowing: true,\n      });\n    } else {\n      this.setState({\n        isButtonShowing: false,\n      });\n    }\n  }\n\n  fetchingData = async () => {\n    try {\n      const response = await getAllPics();\n\n      this.setState({\n        picsList: response.data,\n      });\n\n      console.log('response', response)\n    } catch(error) {\n      console.log('error', error);\n    }\n  }\n\n  teste = (lastOne) => {\n    // const lastOne = this.state.picsList.length - 1;\n\n    // if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n      \n    // } else {\n    //   mybutton.style.display = \"none\";\n    // }\n\n    console.log('lastOne', lastOne)\n  }\n\n  render() {\n    console.log('isButtonShowing', this.state.isButtonShowing)\n    return (\n      <Container>\n        <Header />\n        <Content>\n          {this.state.picsList.map((item, index) => (\n            <ContainerImage key={index}>\n              <img src={item.urls.small} alt={item.alt_description} />\n            </ContainerImage> \n          ))}\n          <Button \n            display={this.state.isButtonShowing} \n            onClick={this.teste}\n            >\n              clica aqui\n          </Button>\n        </Content>\n      </Container>\n    );\n  }\n}\n\nexport default Search;\n\n"]},"metadata":{},"sourceType":"module"}