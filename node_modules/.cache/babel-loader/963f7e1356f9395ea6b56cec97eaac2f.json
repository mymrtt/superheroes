{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/personal/code/simple/src/screens/Todo.js\";\n// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { nanoid } from \"nanoid\";\nimport { connect } from 'react-redux'; // Components\n\nimport Header from '../components/Header';\nimport Input from '../components/Input';\nimport Button from '../components/Button'; // Images\n\nimport editIcon from \"../assets/edit.svg\";\nimport deleteIcon from \"../assets/x-circle.svg\"; // Redux\n\nimport { addTask, deleteTask, editTask } from '../dataflow/modules/todo-modules';\n\nconst mapStateToProps = state => ({\n  list: state.todo.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTask: info => dispatch(addTask(info)),\n  deleteTask: info => dispatch(deleteTask(info)),\n  editTask: info => dispatch(editTask(info))\n}); // Styles\n\n\nconst Container = styled.div`\n  height: 100vh;\n  font-family: 'Overpass', Regular;\n  background: #f2f4f7;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst ContainerTodo = styled.div`\n  margin: 2rem;\n  padding-bottom: 1rem;\n  width: 25%;\n  max-width: 35%;\n  height: fit-content;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n`;\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  text-align: center;\n`;\nconst ContentTodo = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst ContainerList = styled.ul`\n  margin: 2rem;\n  padding: 0;\n  width: 60%;\n  max-width: 60%;\n  height: 80vh;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n  display: ${props => props.emptyMessage && 'flex'};\n  justify-content: ${props => props.emptyMessage && 'center'};\n  align-items: ${props => props.emptyMessage && 'center'};\n`;\nconst ListItem = styled.li`\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  border-bottom: 1px solid #c7cad0;\n\n  &:hover {\n\t\tbackground: #c7cad088;\n\t}\n`;\nconst ListItemText = styled.p`\n  width: 90%;\n  color: ${props => props.category ? '#2EC4B6' : '#000'}\n  font-size: 1rem;\n  word-break: break-all;\n  font-weight: ${props => props.name && '800'};\n`;\nconst ListItemOptions = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst ItemOptionsIcon = styled.img`\n  margin-right: ${props => props.first && '.5rem'};\n  cursor: pointer;\n`;\nconst EmptyListMessage = styled.p`\n  font-size: 1.5rem;\n  text-align: center;\n`;\nconst ErrorMessage = styled.p`\n  margin: 0;\n  font-size: .8rem;\n  color: tomato;\n  font-weight: bold;\n`;\n\nclass Todo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: {\n        name: '',\n        task: '',\n        category: ''\n      },\n      nameError: undefined,\n      taskError: undefined,\n      categoryError: undefined,\n      emptyError: undefined,\n      list: []\n    };\n\n    this.handleSubmit = () => {\n      const {\n        emptyError,\n        values,\n        list\n      } = this.state;\n      const {\n        name,\n        task,\n        category,\n        nameError,\n        taskError,\n        categoryError\n      } = values;\n\n      if (name === '' && task === '' && category === '') {\n        this.setState({\n          emptyError: 'Preencha todos os campos.'\n        });\n      } else {\n        this.setState({\n          emptyError: undefined\n        });\n\n        if (name.length === 0) {\n          this.setState({\n            nameError: 'Insira um nome.'\n          });\n        } else {\n          this.setState({\n            nameError: undefined\n          });\n        }\n\n        if (task.length === 0) {\n          this.setState({\n            taskError: 'Insira uma marca.'\n          });\n        } else {\n          this.setState({\n            taskError: undefined\n          });\n        }\n\n        if (category.length === 0) {\n          this.setState({\n            categoryError: 'Insira uma ficha tÃ©cnica.'\n          });\n        } else {\n          this.setState({\n            categoryError: undefined\n          });\n        }\n\n        if (!emptyError && !nameError && !taskError && !categoryError) {\n          const item = {\n            id: nanoid(5),\n            name,\n            task,\n            category\n          }; // Create\n\n          if (!values.id) {\n            this.setState({\n              list: list.concat(item),\n              editModel: false,\n              values: {\n                name: '',\n                task: '',\n                category: ''\n              }\n            });\n            this.props.addTask(item);\n          } else {\n            // Edit\n            //pegando a lista do estado\n            // const selectedItem = list.find(item => item.id === values.id);\n            const selectedItem = this.props.list.find(item => item.id === values.id);\n            this.setState({\n              values: selectedItem\n            });\n            const newList = this.props.list.map(item => item.id === values.id ? values : item);\n            this.props.editTask(newList);\n            this.setState({\n              // list: newList,\n              values: {\n                name: '',\n                task: '',\n                category: ''\n              },\n              editModel: false\n            });\n          }\n        }\n      }\n    };\n\n    this.handleChange = (ev, field) => {\n      const {\n        values\n      } = this.state;\n      values[field] = ev.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleDeleteModel = model => {\n      // delete via componente\n      // const { list } = this.state;\n      // const del = list.filter(item => item.id !== model.id);\n      // this.setState({\n      //   list: del,\n      // });\n      // delete via redux\n      this.props.deleteTask(model);\n    };\n\n    this.handleEditModel = model => {\n      this.setState({\n        values: {\n          id: model.id,\n          name: model.name,\n          task: model.task,\n          category: model.category\n        },\n        editModel: true\n      });\n    };\n\n    this.renderList = () => {\n      // const { list } = this.state;\n      const {\n        list\n      } = this.props;\n      return /*#__PURE__*/React.createElement(ContainerList, {\n        emptyMessage: list.length === 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 7\n        }\n      }, list.length > 0 ? list.map(item => /*#__PURE__*/React.createElement(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        name: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }\n      }, item.name), /*#__PURE__*/React.createElement(ListItemText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }\n      }, item.task), /*#__PURE__*/React.createElement(ListItemText, {\n        category: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }, item.category), /*#__PURE__*/React.createElement(ListItemOptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ItemOptionsIcon, {\n        first: true,\n        src: editIcon,\n        alt: \"editar\",\n        onClick: () => this.handleEditModel(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ItemOptionsIcon, {\n        src: deleteIcon,\n        alt: \"excluir\",\n        onClick: () => this.handleDeleteModel(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      })))) : /*#__PURE__*/React.createElement(EmptyListMessage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }, \"Voc\\xEA ainda n\\xE3o possui uma tarefa :(\"));\n    };\n  }\n\n  render() {\n    const {\n      nameError,\n      taskError,\n      emptyError,\n      categoryError,\n      values,\n      editModel\n    } = this.state;\n    const {\n      name,\n      task,\n      category\n    } = values;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ContainerTodo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, \"Adicione uma Tarefa\"), /*#__PURE__*/React.createElement(ContentTodo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: name,\n      type: \"text\",\n      label: \"T\\xEDtulo\",\n      containerWidth: \"75%\",\n      inputWidth: \"100%\",\n      borderBottom: emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\",\n      onChange: ev => this.handleChange(ev, 'name'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }), nameError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }, nameError), /*#__PURE__*/React.createElement(Input, {\n      value: task,\n      type: \"text\",\n      label: \"Tarefa\",\n      containerWidth: \"75%\",\n      inputWidth: \"100%\",\n      borderBottom: emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\",\n      onChange: ev => this.handleChange(ev, 'task'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    }), taskError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 29\n      }\n    }, taskError), /*#__PURE__*/React.createElement(Input, {\n      value: category,\n      type: \"text\",\n      label: \"Categoria\",\n      containerWidth: \"75%\",\n      inputWidth: \"100%\",\n      borderBottom: emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\",\n      onChange: ev => this.handleChange(ev, 'category'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }), categoryError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }, categoryError), emptyError && /*#__PURE__*/React.createElement(ErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 30\n      }\n    }, emptyError), /*#__PURE__*/React.createElement(Button, {\n      text: editModel ? 'Editar' : 'Adicionar',\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }))), this.renderList()));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","map":{"version":3,"sources":["/home/yasmin/Documentos/personal/code/simple/src/screens/Todo.js"],"names":["React","Component","styled","nanoid","connect","Header","Input","Button","addTask","deleteTask","editTask","mapStateToProps","state","list","todo","mapDispatchToProps","dispatch","info","Container","div","Wrapper","ContainerTodo","Title","h2","ContentTodo","ContainerList","ul","props","emptyMessage","ListItem","li","ListItemText","p","category","name","ListItemOptions","ItemOptionsIcon","img","first","EmptyListMessage","ErrorMessage","Todo","values","task","nameError","undefined","taskError","categoryError","emptyError","handleSubmit","setState","length","item","id","concat","editModel","selectedItem","find","newList","map","handleChange","ev","field","target","value","handleDeleteModel","model","handleEditModel","renderList","editIcon","deleteIcon","render"],"mappings":"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","sourcesContent":["// Libs\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { nanoid } from \"nanoid\";\nimport { connect } from 'react-redux';\n\n// Components\nimport Header from '../components/Header';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\n// Images\nimport editIcon from '../assets/edit.svg';\nimport deleteIcon from '../assets/x-circle.svg';\n\n// Redux\nimport { addTask, deleteTask, editTask } from '../dataflow/modules/todo-modules';\n\nconst mapStateToProps = (state) => ({\n  list: state.todo.list,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTask: (info) => dispatch(addTask(info)),\n  deleteTask: (info) => dispatch(deleteTask(info)),\n  editTask: (info) => dispatch(editTask(info)),\n});\n\n// Styles\nconst Container = styled.div`\n  height: 100vh;\n  font-family: 'Overpass', Regular;\n  background: #f2f4f7;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ContainerTodo = styled.div`\n  margin: 2rem;\n  padding-bottom: 1rem;\n  width: 25%;\n  max-width: 35%;\n  height: fit-content;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n`;\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  text-align: center;\n`;\n\nconst ContentTodo = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ContainerList = styled.ul`\n  margin: 2rem;\n  padding: 0;\n  width: 60%;\n  max-width: 60%;\n  height: 80vh;\n  border: 2px solid #c7cad0;\n  border-radius: 10px;\n  display: ${(props) => props.emptyMessage && 'flex'};\n  justify-content: ${(props) => props.emptyMessage && 'center'};\n  align-items: ${(props) => props.emptyMessage && 'center'};\n`;\n\nconst ListItem = styled.li`\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  border-bottom: 1px solid #c7cad0;\n\n  &:hover {\n\t\tbackground: #c7cad088;\n\t}\n`;\n\nconst ListItemText = styled.p`\n  width: 90%;\n  color: ${(props) => props.category ? '#2EC4B6' : '#000'}\n  font-size: 1rem;\n  word-break: break-all;\n  font-weight: ${(props) => props.name && '800'};\n`;\n\nconst ListItemOptions = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ItemOptionsIcon = styled.img`\n  margin-right: ${(props) => props.first && '.5rem'};\n  cursor: pointer;\n`;\n\nconst EmptyListMessage = styled.p`\n  font-size: 1.5rem;\n  text-align: center;\n`;\n\nconst ErrorMessage = styled.p`\n  margin: 0;\n  font-size: .8rem;\n  color: tomato;\n  font-weight: bold;\n`;\n\nclass Todo extends Component {\n  state = {\n    values: {\n      name: '',\n      task: '',\n      category: '',\n    },\n    nameError: undefined,\n    taskError: undefined,\n    categoryError: undefined,\n    emptyError: undefined,\n    list: [],\n  }\n\n  handleSubmit = () => {\n    const { emptyError, values, list } = this.state;\n    const { name, task, category, nameError, taskError, categoryError } = values;\n\n    if (name === '' && task === '' && category === '') {\n      this.setState({\n        emptyError: 'Preencha todos os campos.',\n      });\n    } else {\n      this.setState({\n        emptyError: undefined,\n      });\n\n      if (name.length === 0) {\n        this.setState({\n          nameError: 'Insira um nome.',\n        });\n      } else {\n        this.setState({\n          nameError: undefined,\n        })\n      }\n  \n      if (task.length === 0) {\n        this.setState({\n          taskError: 'Insira uma marca.',\n        });\n      } else {\n        this.setState({\n          taskError: undefined,\n        })\n      }\n\n      if (category.length === 0) {\n        this.setState({\n          categoryError: 'Insira uma ficha tÃ©cnica.',\n        });\n      } else {\n        this.setState({\n          categoryError: undefined,\n        });\n      }\n\n      if (!emptyError && !nameError && !taskError && !categoryError) {\n        const item = {id: nanoid(5), name, task, category}\n\n        // Create\n        if (!values.id) {\n          this.setState({\n            list: list.concat(item),\n            editModel: false,\n            values: {\n              name: '',\n              task: '',\n              category: '',\n            }\n          });\n\n          this.props.addTask(item);\n\n        } else {\n          // Edit\n\n          //pegando a lista do estado\n          // const selectedItem = list.find(item => item.id === values.id);\n\n          const selectedItem = this.props.list.find(item => item.id === values.id);\n\n          this.setState({\n            values: selectedItem,\n          });\n\n          const newList = this.props.list.map(item => (item.id === values.id ? values : item));\n\n          this.props.editTask(newList);\n\n          this.setState({\n            // list: newList,\n            values: {\n              name: '',\n              task: '',\n              category: '',\n            },\n            editModel: false,\n          });\n        }\n      }\n    }\n  }\n\n  handleChange = (ev, field) => {\n    const { values } = this.state;\n\n    values[field] = ev.target.value;\n\n    this.setState({\n      values,\n    });\n  }\n\n  handleDeleteModel = (model) => {\n    // delete via componente\n    // const { list } = this.state;\n\n    // const del = list.filter(item => item.id !== model.id);\n\n    // this.setState({\n    //   list: del,\n    // });\n\n\n    // delete via redux\n    this.props.deleteTask(model);\n  }\n\n  handleEditModel = (model) => {\n    this.setState({\n      values: {\n        id: model.id,\n        name: model.name,\n        task: model.task,\n        category: model.category,\n      },\n      editModel: true,\n    });\n  }\n\n  renderList = () => {\n    // const { list } = this.state;\n    const { list } = this.props;\n\n    return (\n      <ContainerList emptyMessage={list.length === 0}>\n        {list.length > 0 ? (\n          list.map(item => (\n            <ListItem>\n              <ListItemText name>{item.name}</ListItemText>\n              <ListItemText>{item.task}</ListItemText>\n              <ListItemText category>{item.category}</ListItemText>\n              <ListItemOptions>\n                <ItemOptionsIcon first src={editIcon} alt=\"editar\" onClick={() => this.handleEditModel(item)} />\n                <ItemOptionsIcon src={deleteIcon} alt=\"excluir\" onClick={() => this.handleDeleteModel(item)} />\n              </ListItemOptions>\n            </ListItem>\n          ))\n        ) : <EmptyListMessage>VocÃª ainda nÃ£o possui uma tarefa :(</EmptyListMessage>\n        }\n      </ContainerList>\n    );\n  }\n\n  render() {\n    const { nameError, taskError, emptyError, categoryError, values, editModel } = this.state;\n    const { name, task, category } = values;\n\n    return (\n      <Container>\n        <Header />\n        <Wrapper>\n          <ContainerTodo>\n            <Title>Adicione uma Tarefa</Title>\n            <ContentTodo>\n              <Input\n                value={name}\n                type=\"text\"\n                label=\"TÃ­tulo\"\n                containerWidth=\"75%\"\n                inputWidth=\"100%\"\n                borderBottom={emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\"}\n                onChange={(ev) => this.handleChange(ev, 'name')}\n              />\n              {nameError && <ErrorMessage>{nameError}</ErrorMessage>}\n              <Input\n                value={task}\n                type=\"text\"\n                label=\"Tarefa\"\n                containerWidth=\"75%\"\n                inputWidth=\"100%\" \n                borderBottom={emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\"}\n                onChange={(ev) => this.handleChange(ev, 'task')}\n              />\n              {taskError && <ErrorMessage>{taskError}</ErrorMessage>}\n              <Input\n                value={category}\n                type=\"text\"\n                label=\"Categoria\"\n                containerWidth=\"75%\"\n                inputWidth=\"100%\" \n                borderBottom={emptyError ? \"2px solid tomato\" : \"2px solid #d7d9dc\"}\n                onChange={(ev) => this.handleChange(ev, 'category')}\n              />\n              {categoryError && <ErrorMessage>{categoryError}</ErrorMessage>}\n              {emptyError && <ErrorMessage>{emptyError}</ErrorMessage>}\n              <Button \n                text={editModel ? 'Editar' : 'Adicionar'}\n                onClick={this.handleSubmit}\n              />\n            </ContentTodo>\n          </ContainerTodo>\n            {this.renderList()}\n        </Wrapper>\n      </Container>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n"]},"metadata":{},"sourceType":"module"}